% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wglmm_R_paket.R
\name{wglmm}
\alias{wglmm}
\title{Survey-weighted Generalized Linear Mixed Models}
\usage{
wglmm(formula, data = NULL, family = gaussian(), weights = NULL,
  iter1  = 501, iter2 = 501,  MI = 500, tol1 = 2e-4,
  tol2 = 1e-5, trace = TRUE, nDecrease = 2, ...)
}
\arguments{
\item{formula}{Formula for the Model to be estimated. Has the shape of lmer in the package lme4.}

\item{data}{Dataframe containing the variables}

\item{family}{Distribution from the exponential family. You can choose between gaussian(), binomial(),  poisson(),  Gamma() and  exponential(). However, only  gaussian() and binomial() are already extensively tested.}

\item{weights}{Survey weights}

\item{iter1}{Maximum number of MCEM iterations}

\item{iter2}{Maximum number of internal optimizations within a MCEM-step}

\item{MI}{Number of importance-sampled random numbers in E-step}

\item{tol1}{Convergence criterion for MCEM algorithm}

\item{tol2}{Convergence criterion for opimizations within a MCEM-step}

\item{trace}{Print output of each MCEM-step?}

\item{nDecrease}{How often is it allowed that the estimate of LL does not increase?}

\item{...}{Additional options for model set-up}
}
\value{
A list with the following elements
\itemize{
\item coef Vector of fixed effects regression parameters
\item VarCov List of random effects variance-covariance matrices
\item scale Scale parameter for exponential family
\item RE_mat Matrix with simulated random effects from last E-step, including importance weights
\item RE_mode List with modes of the random effects
\item residuals List with different types of residuals
\item LLmod Joint maximum log-likelihood of observed data and the mode of random effects
\item LLexp Expected log-likelihood given the observed data
\item niter Number of iterations
\item convergence Has MCEM converged?
}
}
\description{
Estimates generalized linear mixed models with flexible random effects structure and survey weights.
}
\details{
For comparability between runs, set a seed due to stochastic optimization.
}
\examples{
\dontrun{
  library(mvtnorm)
n            <- 200
beta         <- c(4, -2, -1)
covmat       <- matrix(0.5, ncol = 2, nrow = 2)
diag(covmat) <- c(0.7, 1.3)

X1           <- rnorm(n, mean = 2)
X2           <- rexp(n, rate = 1)

group1 <- rep(1:10, length.out = n)
group2 <- rep(1:20, length.out = n)
re1    <- rnorm(10, sd = 2)
re2    <- rmvnorm(20, sigma = covmat)

modX  <- model.matrix( ~ X1 + X2)
modZ1 <- model.matrix( ~ -1 + as.factor(group1))
modZ2A <- model.matrix( ~ -1 + as.factor(group2))
modZ2B <- model.matrix( ~ -1 + X1:as.factor(group2))

eta    <- modX \%*\% beta + modZ1 \%*\% re1 +
          modZ2A \%*\% as.vector(re2[,1]) +
          modZ2B \%*\% as.vector(re2[,2])

lin    <- eta + rnorm(n, sd = 2.3)
dfsamp <- data.frame(group1 = factor(group1, levels = 1:10),
                     group2 = factor(group2, levels = 1:20),
                     X1 = X1, X2 = X2)
dfsamp$lin <- lin
modLin <- wglmm( lin ~ X1 + X2 + (1|group1) + (1+X1|group2),
            data = dfsamp, trace = TRUE, iter1 = 250,
            iter2 = 1001, MI = 2000)
}
}
\references{
Burgard, Jans Pablo and Doerr, Patricia (2018). Survey-weighted Generalized Linear Mixed Models. Trier University. Working Paper.
}
